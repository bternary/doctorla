@model Data.Domain.User
@{
    Layout = null;
    List<Data.Domain.Country> countrys = TempData["Countrys"] as List<Data.Domain.Country>;
    List<Data.Domain.Department> department = TempData["department"] as List<Data.Domain.Department>;
}

<!DOCTYPE>

<html lang="tr">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Giris</title>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" type="text/css">
    <!--Default CSS-->
    @*<link href="~/css/default.css" rel="stylesheet" type="text/css"> DEĞİŞTİR *@
    <link href="~/css/default.min.css" rel="stylesheet" type="text/css">
    <!--Custom CSS-->
    @*<link href="~/css/style.css" rel="stylesheet" type="text/css"> DEĞİŞTİR *@
    <link href="~/css/style.min.css" rel="stylesheet" type="text/css">
    <!--Plugin CSS-->
    <link href="~/css/plugin.css" rel="stylesheet" type="text/css">
    <!--Flaticons CSS-->
    <link href="~/fonts/flaticon.css" rel="stylesheet" type="text/css">
    <!--Font Awesome-->
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />
    <link href="~/css/toastr.min.css" rel="stylesheet" />
    <style>




        /* Alignment styles */

        body, html {
            height: 100%;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            background-image: url("../images/girisarka.jpg");
            /* Full height */ height: 100%;
            /* Center and scale the image nicely */
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        #video .modal {
            display: flex;
            justify-content: center;
        }

        #video .modal-dialog {
            width: 50%;
            height: 50%;
            margin-top: 10%;
        }

            #video .modal-dialog video {
                width: 100%;
                height: 100%;
            }
    </style>
</head>
<body class="" onload="telNo()">
    <section class="login" style="padding:0;">
        <div class="anasayfa-buton">
            <a href="/" class="btn btn1" title="Anasayfa"><i class="fas fa-home"></i> Doctorla</a>
            <a href="/" class="btn btn2" title="Anasayfa"><i class="fas fa-home"></i></a>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="d-xs-none d-sm-block  col-sm-5 girisfoto" style="height:100% !important; position:relative;">
                    <img src="~/images/giris.png" alt="giris" />
                </div>
                <div class="col-sm-7 col-md-5 " style=" display:flex; justify-content:center; height:100%;">
                    <div class="girisekran" id="girisekran">
                        <form method="post" id="girisForm" class="validationCheck">
                            <div class="row">

                                <div class="col-xs-12">
                                    <div class="form-title">
                                        <h2>Giriş</h2>
                                        <p>Hesabınızı Oluşturmadıysanız Hemen Kaydolun</p>
                                    </div>
                                </div>
                                <div class="form-group col-xs-12">
                                    <label>E-Posta Adresi</label>
                                    @Html.TextBoxFor(m => m.Email, new { @type = "email", @placeholder = "Lütfen Kayıtlı E-Posta Adresinizi Giriniz", @class = "form-control", @id = "GirisEmail" })

                                    <i class="fas fa-exclamation-circle"></i>
                                    <small>Error message</small>
                                </div>
                                <div class="form-group col-xs-12">
                                    <label>Şifreniz</label>
                                    @Html.TextBoxFor(m => m.Password, new { @type = "password", @placeholder = "Şifrenizi Giriniz", @class = "form-control", @id = "GirisSifre" })
                                    <i class="fas fa-exclamation-circle"></i>
                                    <small>Error message</small>
                                </div>
                                <div class="  col-12 col-sm-6 col-xs-6 comment-btn">
                                    <button type="button" onclick="validationCheckGiris(event)" id="girisButon" class="btn"><i class="fa fa-arrow-circle-right"></i> Giriş Yap</button>
                                    <button type="submit" style="display:none;"></button>

                                </div>
                                <div class=" col-12 col-sm-6 col-xs-6 comment-btn ">
                                    <a href="#" onclick="kayitekran()" class="btn"><i class="fa fa-plus-circle"></i> Kayıt Ol</a>
                                </div>
                                <div class="col-xs-12">
                                    <div class="login-accounts">
                                        <div class="col-12">
                                            <a href="#" onclick="resetPassword()" class="forgotpw">Şifremi Unuttum</a>
                                        </div>

                                    </div>

                                </div>
                            </div>

                        </form>
                    </div>
                    <div class="kayitekran" id="kayitekran" style="display:none;">
                        <form action="/Doctorla/KayitOl" data-ajax="true" data-ajax-failure="OnFailure" autocomplete="off" data-ajax-method="POST" data-ajax-success="OnSuccess" id="formregister" method="post" class="validationCheck">
                            <input type=hidden name="IsUser" id="IsUser" value="1" />
                            @Html.HiddenFor(x => x.Id)
                            <div class="row">
                                <div class="col-xs-12">
                                    <div class="form-title">
                                        <h2>Kayıt Ol</h2>
                                        <p>Lütfen Ön Kullanıcı Bilgilerinizi Doğru Bir Şekilde Giriniz</p>
                                        <span class="yardim" onclick="randevuvideo()">Eğitim Videosu İçin ->   <i class="fa fa-question-circle"></i></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-6">
                                        @Html.ValidationMessageFor(x => x.Name)
                                        <label>Adınız:</label>
                                        @Html.TextBoxFor(m => m.Name, new { @type = "text", @placeholder = "Lütfen Adınızı Girin", @class = "form-control", @autocomplete = "awdaw", @id = "KayitAd" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6">
                                        @Html.ValidationMessageFor(x => x.SurName)
                                        <label>Soyadınız:</label>
                                        @Html.TextBoxFor(m => m.SurName, new { @type = "text", @placeholder = "Lütfen Soyadınızı Girin", @class = "form-control", @autocomplete = "off", @id = "KayitSoyad" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-6">
                                        @Html.ValidationMessageFor(x => x.Email)
                                        <label>Email:</label>
                                        @Html.TextBoxFor(m => m.Email, new { @type = "email", @placeholder = "abc@xyz.com", @class = "form-control", @autocomplete = "off", @id = "KayitEmail" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6">
                                        @Html.ValidationMessageFor(x => x.Phone)
                                        <label>Telefon Numaranız:</label>
                                        @Html.TextBoxFor(m => m.Phone, new { @type = "tel", @placeholder = "555 555 55 55", @class = "form-control", @autocomplete = "off", @id = "KayitTelefon" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-4">
                                        @Html.ValidationMessageFor(x => x.Birthdate)
                                        <label>Doğum Tarihi:</label>
                                        @Html.TextBoxFor(m => m.Birthdate, new { @type = "date", @placeholder = "01.01.2020", @class = "form-control tarih", @id = "KayitDTarih" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-4">
                                        @Html.ValidationMessageFor(x => x.Gender)
                                        <label>Cinsiyet:</label>
                                        @Html.DropDownListFor(x => x.Gender, new List<SelectListItem> { new SelectListItem { Text = "Kadın", Value = "F" }, new SelectListItem { Text = "Erkek", Value = "M" }, new SelectListItem { Text = "Belirtilmemiş", Value = "NA" } }, "Cinsiyetiniz", new { id = "KayitCinsiyet" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-4">
                                        <label>Ülkeniz:</label>
                                        <select onchange="GetCitys()" id="Country" name="Country">
                                            <option value="-1">Ülke Seçiniz</option>
                                            @foreach (var item in countrys)
                                            {
                                                <option value="@item.Id">@item.Name</option>
                                            }
                                        </select>
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-4">
                                        <label>İl:</label>
                                        <select onchange="GetCounty()" id="City" name="City">
                                            <option value="-1" selected>Önce Ülke Seçiniz</option>
                                        </select>
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-4">
                                        <label>İlçe:</label>
                                        <select id="County" name="County">
                                            <option value="-1" selected>Önce Şehir Seçiniz</option>
                                        </select>
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-4">
                                        <label>Mahalle:</label>
                                        <input type="text" class="form-control" id="kayitMahalle" name="AddressDetail" placeholder="Mahalle Giriniz" />
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                </div>
                                <div class="row" id="doctordiv" style="display:none">
                                    <div class="row">
                                        <div class="form-group col-xs-12 col-sm-6">
                                            <label>Bitirdiğiniz Üniversite:</label>
                                            <select id="doctorUniversity" name="doctorUniversity" class="form-control">
                                                <option value="-1">Bitirdiğiniz Üniversiteyi Seçiniz</option>
                                            </select>
                                            <i class="fas fa-exclamation-circle"></i>
                                            <small>Error message</small>
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-6">
                                            <label>Uzmanlık Alanı:</label>
                                            <select id="doctorDepartment" name="doctorDepartment" class="form-control">
                                                <option value="-1">Uzmanlık Alanı Seçiniz</option>
                                                @foreach (var item in department)
                                                {
                                                    <option value="@item.Id">@item.Name</option>
                                                }
                                            </select>
                                            <i class="fas fa-exclamation-circle"></i>
                                            <small>Error message</small>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-xs-12 col-sm-6">
                                            <label>Lütfen Alan Seçiniz:</label>
                                            <select onchange="DoctorOrNurse(this)" id="IsDoctor" name="IsDoctor" class="form-control">
                                                <option value="0">Alan Seçiniz</option>

                                                <option value="1">Doktor</option>
                                                <option value="-1">Hemşire</option>
                                            </select>
                                            <i class="fas fa-exclamation-circle"></i>
                                            <small>Error message</small>
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-6">
                                            <label>Ünvanınız:</label>
                                            <select id="doctorTitle" name="doctorTitle" class="form-control">
                                                <option value="-1">Ünvan Seçiniz</option>
                                                <option value="0">Ünvan Yok</option>
                                            </select>
                                            <i class="fas fa-exclamation-circle"></i>
                                            <small>Error message</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-6">
                                        @Html.ValidationMessageFor(x => x.Password)
                                        <label>Şifrenizi Giriniz :</label>
                                        @Html.TextBoxFor(m => m.Password, new { @type = "password", @placeholder = "Şifrenizi Giriniz", @class = "form-control", @id = "KayitSifre1" })
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-left-padding">
                                        <label>Şifre Onay :</label>
                                        <input type="password" class="form-control" name="PasswordCheck" placeholder="Şifrenizi Tekrar Giriniz" id="KayitSifre2" />
                                        <i class="fas fa-exclamation-circle"></i>
                                        <small>Error message</small>
                                    </div>
                                </div>
                                <div class="row" style="">
                                    
                                    <div class="col-xs-12 col-sm-6 second-button" style="float:right;">
                                        <a id="doctorActive" onclick="DoctorActive(this)" data-id="0" style="" class="btn">Sağlık Personeli misiniz?</a>
                                    </div>
                                </div>
                                <div class="row kayit-sirala">

                                    <div class="col-xs-12 col-sm-6 kayit-giris order-1">
                                        <div class="comment-btn">
                                            <a href="#" class="btn" onclick="girisekran()"><i class="fa fa-arrow-circle-left"></i> Giriş Yap</a>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-6 kayit-kayit order-12" style="text-align:right">
                                        <div class="comment-btn">
                                            <button type="button" id="kayitol" class="btn" onclick="validationCheckKayit(event)"><i class="fa fa-plus-circle"></i> Kayıt Ol</button>
                                            <button id="kayitol" style="display:none" class="btn" onclick="sozlesmekabul()"><i class="fa fa-plus-circle"></i> Kayıt Ol</button>
                                            <button type="submit" style="display:none" id="kayitolsubmit" class="btn"><i class="fa fa-plus-circle"></i> Kayıt Ol</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </form>
                    </div>


                </div>
            </div>
        </div>
        <div class="modal fade" id="sozlesmeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Kullanıcı Sözleşmesi</h5>
                        <button type="button" class="close modal-kapat" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body sozlesme-icerik">
                        @Html.Partial("~/Views/Saglikcim/Partials/_PrivatePolicy.cshtml")
                    </div>
                    <div class="modal-footer kabul-etme-buton">
                        <button type="button" class="btn btn-primary btn-kabul" onclick="kabuledildi()">Kullanıcı Sözleşmesini Okudum ve Kabul Ediyorum</button>
                    </div>
                </div>
            </div>
        </div>
        
        @*-------------------------------- şifre sıfırlama ------------------------------*@
        <div class="modal fade" id="sifreSifirlamaModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Şifre Yenileme</h5>
                        <button type="button" class="close modal-kapat" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="text-center">
                        <h3><i class="fa fa-lock fa-4x"></i></h3>
                        <h2 class="text-center">Şifrenizi mi unuttunuz?</h2>
                        <p>Telefon numaranızı girerek şifrenizi sıfırlayabilirsiniz.</p>
                        <div class="panel-body">

                            <form class="form">
                                <fieldset>
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fas fa-phone"></i></span>

                                            <input type="text" class="form-control bfh-phone" id="phoneSifreSifirlama" value="" data-format="+90 (ddd) ddd-dddd">
                                        </div>
                                    </div>
                                    <div id="sifreSifirlamaBasarili" style="display:none;" class="alert alert-success" role="alert">
                                        Şifre sıfırlama sayfasına yönlendiriliyorsunuz!
                                    </div>
                                    <div id="sifreSifirlamaBasarisiz" style="display:none;" class="alert alert-danger" role="alert">
                                        Girdiğiniz telefon numarasına ait bir hesap bulunmamaktadır.
                                    </div>
                                    <div class="form-group">
                                        <input class="btn btn-lg btn-primary btn-block" onclick="sifresifirlama()" value="Şifremi Sıfırla" type="submit">
                                    </div>
                                </fieldset>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div id="video" class="modal" tabindex="-1" role="dialog">
        @* Randevu Oluştur Video *@
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <video class="randevuvideo" id="videoplayer" controls><source src="~/images/girisvekayit.mp4" type="video/mp4">Tarayıcınız Bu Dosya Türünü Desteklemiyor</video>
            </div>
        </div>
    </div>

    <!-- *Scripts* -->
    <script src="~/js/jquery-3.3.1.min.js"></script>
    <script src="~/js/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/plugin.js"></script>
    <script src="~/js/main.js"></script>
    <script src="~/js/custom-nav.js"></script>
    <script src="https://unpkg.com/imask"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="~/js/toastr.min.js"></script>

    <script type="text/javascript">
        function randevuvideo() {
            $('#video').modal('show')
        }
        $('#video').on('hidden.bs.modal', function (e) {
            document.getElementById("videoplayer").pause(1);
        })
        var sozlesmedurum = 0;
        function sozlesmekabul() {
            if (sozlesmedurum == 0) {
                $('#sozlesmeModal').modal('show');
                jQuery(document).ready(function ($) {
                    $('#sozlesmeModal .btn-kabul').prop('disabled', true);
                    $('#sozlesmeModal .sozlesme-icerik').scroll(function () {
                        if ($(this).scrollTop() + $(this).height() > $(this)[0].scrollHeight - 80) {
                            //enable button
                            $('#sozlesmeModal .btn-kabul').prop('disabled', false);
                        }
                    });
                });
            }

        }



    @* --------------------------------şifre sıfırlama------------------------------*@
        function telNo2() {
            var phoneMask = IMask(
                document.getElementById('resetTelNo'), {
                mask: '+9\\0 (000) 000-00-00',
                lazy: false,
                placeholderChar: '_'
            });
        }
        function validateEmail(email) {
            const re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(email);
        }
        var telefonNo="";

        function resetPassword() {
            var yeniSifre;
            Swal.mixin({
                showCancelButton: true,
                progressSteps: ['1', '2', '3']
            }).queue([
                {
                    input: 'text',
                    title: 'Şifrenizi Sıfırlamak mı İstiyorsunuz?',
                    text: 'Hesabınıza ait telefon numarasını girerek şifrenizi sıfırlayabilirsiniz.',
                    showCancelButton: true,
                    inputAttributes: {
                        id: 'resetTelNo',
                        contentEditable:'true'
                    },
                    onOpen: function (el) {
                        var phoneMask = IMask(
                            document.getElementById('resetTelNo'), {
                            mask: '+9\\0 (000) 000-00-00',
                            lazy: false,
                            placeholderChar: '_'
                        });
                        document.getElementById("resetTelNo").click();


                    },
                    confirmButtonText: 'Devam Et',
                    cancelButtonText: 'İptal Et',
                    cancelButtonColor: '#d33',
                    showLoaderOnConfirm: true,
                    customClass: 'swal-resetPassword',
                    preConfirm: (login) => {
                        if (login.indexOf('_')>-1) {
                            Swal.showValidationMessage(
                                'Lütfen Boş Bırakmayınız!'
                            )
                        } else {
                            return $.ajax({
                                url: '/Saglikcim/SifreSifirlamaKod',
                                data: { Phone: login },
                                type: 'post',
                                dataType: 'json',
                                success: function (data) {

                                    if (data.status == -1) {
                                        Swal.showValidationMessage(
                                            'Girilen telefon numarasına ait bir hesap bulunmamaktadır!'
                                        )
                                    } else {
                                        telefonNo = login;
                                    }

                                },
                                error: function (data) {
                                    console.log(data);

                                }
                            });
                        }

                    },
                },
                {

                    input: 'text',
                    title: 'Hesabınızı Onaylayın',
                    html: '<p>Lütfen <strong></strong> numaralı telefonunuza gönderilen  kodu giriniz</p>',
                    showCancelButton: true,
                    inputAttributes: {
                        id: 'resetTelOnay',
                        contentEditable: 'true'
                    },
                    onBeforeOpen: () => {

                        const content = Swal.getContent()
                        if (content) {
                            const b = content.querySelector('strong');
                            if (b) {
                                b.textContent = telefonNo+" ";
                            }
                        }
                    },
                    confirmButtonText: 'Devam Et',
                    cancelButtonText: 'İptal Et',
                    cancelButtonColor: '#d33',
                    showLoaderOnConfirm: true,
                    customClass: 'swal-resetPassword',
                    preConfirm: (login) => {
                        if (login=="" || login==null) {
                            Swal.showValidationMessage(
                                'Lütfen Boş Bırakmayınız!'
                            )
                        } else {
                            return $.ajax({
                                url: '/Saglikcim/SifreSifirlamaLink',
                                data: { Phone: telefonNo, Kod: login },
                                type: 'post',
                                dataType: 'json',
                                success: function (data) {
                                    if (data.status == -1) {
                                        Swal.showValidationMessage(
                                            'Onay kodunu yanlış girdiniz! Lütfen tekrar deneyiniz!'
                                        )
                                    } else {
                                    }
                                },
                                error: function (data) {
                                    $.ajax({
                                        url: '/Saglikcim/ErrorLogs',
                                        data: { page: "Saglikcim  - Profilim - HesapOnay" },
                                        type: 'post',
                                        dataType: 'json',
                                        success: function (data) {

                                        },
                                        error: function (data) {

                                        }
                                    });
                                    toastr.error('Bir Hata İle Karşılaştık', 'Hata!');
                                }
                            });
                        }

                    },
                },
                {
                    title: 'Yeni Şifrenizi Belirleyin',
                    html: '<div class="NewPasswords" style="text-align: left;">' +
                        '<div>' +
                        '<label for="yeniSifre1">Yeni Şifre</label>' +
                        '<input type="password" id="yeniSifre1"/>'+
                        '</div>' +
                        '<div>' +
                        '<label for="yeniSifre2">Şifreyi Doğrula</label>' +
                        '<input type="password" id="yeniSifre2"/>' +
                        '</div>' +
                        '</div',
                    showCancelButton: true,

                    confirmButtonText: 'Devam Et',
                    cancelButtonText: 'İptal Et',
                    cancelButtonColor: '#d33',
                    showLoaderOnConfirm: true,
                    customClass: 'swal-resetPassword',
                    preConfirm: () => {
                        var sifre1 = document.getElementById('yeniSifre1').value;
                        var sifre2= document.getElementById('yeniSifre2').value;
                        if (sifre1 == "" || sifre1 == null || sifre2 == "" || sifre2 == null) {
                            Swal.showValidationMessage(
                                'Lütfen Boş Alan Bırakmayınız!'
                            )
                        } else if (sifre1.length < 8) {
                            Swal.showValidationMessage(
                                'Şifre en az 8 karakter olmalıdır!'
                            )
                        } else if (sifre1 != sifre2) {
                            Swal.showValidationMessage(
                                'Girilen Şifreler Eşleşmiyor!'
                            )
                        } else {
                            yeniSifre = sifre1;
                        }
                    },
                }
            ]).then((result) => {
                if (result.value) {
                    var answers = result.value
                    console.log(yeniSifre);
                    console.log(answers[1].token);
                    $.ajax({
                        url: '/Saglikcim/SifreYenile',
                        data: { Password: yeniSifre, refreshToken: answers[1].token },
                        type: 'post',
                        dataType: 'json',
                        success: function (data) {
                            console.log(data);
                            if (data.status == 1) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'İşlem Başarılı',
                                    text: 'Şifreniz başarıyla güncellendi. Yeni şifreniz ile giriş yapabilirsiniz.',
                                    customClass: 'swal-resetPassword',
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                            }
                            else if (data.status == -1) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'İşlem Başarısız',
                                    text: 'Şifre güncelleme sırasında bir hata ile karşılaştık. Lütfen bunu bize bildirin.',
                                    customClass: 'swal-resetPassword',
                                    showConfirmButton: false,
                                    timer: 2000


                                })
                            }
                        },
                        error: function (data) {
                            console.log(data);

                        }
                    });
                }
            })
        }



        function sifresifirlamaekran() {
            $('#sifreSifirlamaModal').modal('show');
        }
        function sifresifirlama() {
            var telefon = document.getElementById("phoneSifreSifirlama").value;
            var uyariBasarili = document.getElementById("sifreSifirlamaBasarili");
            var uyariBasarisiz = document.getElementById("sifreSifirlamaBasarisiz");

            $.ajax({
                url: '/Saglikcim/SifreSifirlamaKod',
                data: { Phone: telefon },
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    if (data.status == 1) {
                        Swal.fire({
                            title: 'Hesabınızı Onaylayın',
                            icon: 'warning',
                            html:
                                'Lütfen <b>' + data.tel + '</b>, numaralı telefonuza gönderilen 6 haneli kodu giriniz:' +
                                '<span class="input-group-text" id="inputGroup-sizing-sm"></span><input data-val="true"  id="OnayKodu"  type="text" value=""> ',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Onayla!',
                            cancelButtonText: 'İptal'
                        }).then((result) => {
                            var onaykodu = document.getElementById('OnayKodu').value;
                            $.ajax({
                                url: '/Saglikcim/SifreSifirlamaLink',
                                data: { Phone: telefon, Kod: onaykodu },
                                type: 'post',
                                dataType: 'json',
                                success: function (data) {
                                    if (data.status == 1) {
                                        Swal.fire(
                                            'Tebrikler!',
                                            'Şifre sıfırlama ekranına yönlendiriliyorsunuz.',
                                            'success'
                                        )
                                        location.replace("/Doctorla/SifreSifirlama/" + data.token)
                                    }
                                    else if (data.status == -1) {
                                        Swal.fire(
                                            'Başarısız!',
                                            'Onay kodunu yanlış girdiniz! Lütfen tekrar deneyiniz.',
                                            'error'
                                        )
                                    }
                                },
                                error: function (data) {
                                    $.ajax({
                                        url: '/Saglikcim/ErrorLogs',
                                        data: { page: "Saglikcim  - Profilim - HesapOnay" },
                                        type: 'post',
                                        dataType: 'json',
                                        success: function (data) {

                                        },
                                        error: function (data) {

                                        }
                                    });
                                    toastr.error('Bir Hata İle Karşılaştık', 'Hata!');
                                }
                            });
                        })

                        //uyariBasarili.style.display = "block";
                        //uyariBasarisiz.style.display = "none";

                    }
                    else if (data.status == -1) {
                        uyariBasarisiz.style.display = "block";
                        uyariBasarili.style.display = "none";
                    }
                },
                error: function (data) {
                    console.log(data);

                }
            });
        }

        

        function OnSuccess(data) {
            if (data.status == 1) {
                Swal.fire({
                    title: data.title,
                    text: data.message + 'Kişisel Sayfanıza Yönlendiriliyorsunuz..',
                    icon: 'success',
                    showConfirmButton: true,
                });

                if (data.isUserReg == '-1')
                    setTimeout(function () { window.location.href = '/DoctorPanel/Anasayfa'; }, 2000)
                else
                    setTimeout(function () { window.location.href = '/Doctorla/Profilim'; }, 2000)
            }
            else {
                Swal.fire({
                    title: data.title,
                    html: data.message,
                    icon: 'error',
                    showConfirmButton: true,
                });
            }
        }
        function OnFailure() {
            Swal.fire({
                title: 'İşlem Hatası Oluştu',
                text: 'Bu İşlem Sırasında Bir Hata Oluştu. Tekrarı Durumunda Lütfen Bu Hatayı Bize Bildiriniz',
                icon: 'error',
                showConfirmButton: true,
            });
        }

        $(function () {
            fillUniversity();
            fillDoctorTitles();
        @if (TempData["Error"]!=null && (bool)TempData["Error"]) {
            @Html.Raw("toastr.error('Hatalı e-posta yada şifre!');")

        }
        });
        function fillUniversity() {
            $.getJSON('../js/JsModels/University.json', function (data) {
                $.each(data, function (i, f) {
                    $("#doctorUniversity").append("<option value='" + f + "'>" + f + "</option>")
                });
            });
        }
        function fillDoctorTitles() {
            $.getJSON('../js/JsModels/DoctorTitles.json', function (data) {

                $.each(data, function (i, f) {
                    $("#doctorTitle").append("<option value='" + i + "'>" + f + "</option>")
                });
            });
        }

        function DoctorOrNurse() {
            var e = document.getElementById("IsDoctor");
            var value = e.options[e.selectedIndex].value;
            if (value == 1) {
                $("#doctorTitle").html("<option value='-1'>Ünvan Seçiniz</option>")
                fillDoctorTitles();
            }
            else {
                $("#doctorTitle").html("<option value='-1'>Hemşire</option>")
            }

        }

        function DoctorActive(buton) {
            if (buton.dataset.id == 0) {
                document.getElementById("doctordiv").style.display = "unset";
                document.getElementById("doctorActive").dataset.id = 1;
                document.getElementById("IsUser").value = -1;
                document.getElementById("doctorActive").innerHTML = "Kullanıcı mısınız?";
                checkuser = false;
            }
            else {
                document.getElementById("doctordiv").style.display = "none";
                document.getElementById("doctorActive").dataset.id = 0;
                document.getElementById("IsUser").value = 1;
                document.getElementById("doctorActive").innerHTML = "Sağlık Personeli misiniz?";
                checkuser = true;

            }

        }




        function telNo() {
            if (window.location.href.indexOf("doktor-kayit") > -1) { // DOKTOR BAŞVURUSU İÇİN GELMİŞ İSE
                kayitekran();
                document.getElementById("doctorActive").click();
            }

            var phoneMask = IMask(
                document.getElementById('KayitTelefon'), {
                mask: '+9\\0 (000) 000-00-00',
                lazy: false,
                placeholderChar: '_'
            });


        }
        function kayitekran() {
            document.getElementById("girisekran").style.display = "none";
            document.getElementById("kayitekran").style.display = "block";
        }
        function girisekran() {
            document.getElementById("kayitekran").style.display = "none";
            document.getElementById("girisekran").style.display = "block";
        }


        var loginButton = document.getElementById("loginButton");
        var registerButton = document.getElementById("registerButton");

        loginButton.onclick = function () {
            document.querySelector("#flipper").classList.toggle("flip");
        }

        registerButton.onclick = function () {
            document.querySelector("#flipper").classList.toggle("flip");
        }

        function GetCitys() {
            var countryid = $("#Country").val();
            $.ajax({
                url: "/Saglikcim/GetCity",
                type: "get",
                dataType: "json",
                data: { CountryId: countryid },
                success: function (data) {
                    $("#City").html('');
                    data.forEach(function (item) {
                        $("#City").append('<option value="' + item.id + '">' + item.name + '</option>');
                    });
                    var x = document.getElementById("City");
                    var c = document.createElement("option");
                    c.text = "Lütfen Bir Şehir Seçiniz";
                    x.options.add(c, 0);
                    document.getElementById("City").selectedIndex = "0";

                },
                    error: function (data) {
                        $.ajax({
                            url: '/Saglikcim/ErrorLogs',
                            data: { page: "Saglikcim  - Giris - GetCitys" },
                            type: 'post',
                            dataType: 'json',
                            success: function (data) {

                            },
                            error: function (data) {

                            }
                        });
                    }
            });


        }
        function GetCounty() {
            var cityid = $("#City").val();
            $.ajax({
                url: "/Saglikcim/GetCounty",
                type: "get",
                dataType: "json",
                data: { CityId: cityid },
                success: function (data) {
                    $("#County").html('');
                    data.forEach(function (item) {
                        $("#County").append('<option value="' + item.id + '">' + item.name + '</option>');
                    });

                },
                    error: function (data) {
                        $.ajax({
                            url: '/Saglikcim/ErrorLogs',
                            data: { page: "Saglikcim  - Giris - GetCounty" },
                            type: 'post',
                            dataType: 'json',
                            success: function (data) {

                            },
                            error: function (data) {

                            }
                        });
                    }
            });
        }
        function validationCheckGiris(e) {
            e.preventDefault();
            checkInputs();
        }
        function validationCheckKayit(e) {
            e.preventDefault();
            checkInputsKayit();
        }
        //document.getElementById("girisButon").addEventListener('click', e => {
        //    console.log("girdi2");

        //    //e.preventDefault();

        //    //checkInputs();
        //});

                    var check=true;
        var checkkayit = true;
        var checkuser = true;

        function checkInputs() {
            const girisForm = document.getElementById('girisForm');
            const GirisEmail = document.getElementById('GirisEmail');
            const GirisSifre = document.getElementById('GirisSifre');
            // trim to remove the whitespaces
            const GirisEmailValue = GirisEmail.value.trim();
            const GirisSifreValue = GirisSifre.value.trim();
            check = true;

            if (GirisEmailValue === '') {
                setErrorFor(GirisEmail, 'E-posta Alanı Boş Bırakılamaz');
            } else if (!isEmail(GirisEmailValue)) {
                setErrorFor(GirisEmail, 'Lütfen Geçerli Bir E-posta Adresi Girin');
            } else {
                setSuccessFor(GirisEmail);
            }
            if (GirisSifreValue === '') {
                setErrorFor(GirisSifre, 'Şifre Alanı Boş Bırakılamaz');
            } else {
                setSuccessFor(GirisSifre);
            }

            if (check==true) {
                $("#girisForm").submit();

            }
        }
        function checkInputsKayit() {
            console.log(checkuser);
            console.log(document.getElementById("doctorActive").dataset.id);
            const KayitAd = document.getElementById('KayitAd');
            const KayitSoyad = document.getElementById('KayitSoyad');
            const KayitEmail = document.getElementById('KayitEmail');
            const KayitTelefon = document.getElementById('KayitTelefon');
            const KayitDTarih = document.getElementById('KayitDTarih');
            const KayitCinsiyet = document.getElementById('KayitCinsiyet');
            const KayitCountry = document.getElementById('Country');
            const KayitCity = document.getElementById('City');
            const KayitCounty = document.getElementById('County');
            const KayitMahalle = document.getElementById('kayitMahalle');
            const KayitdoctorUniversity = document.getElementById('doctorUniversity');
            const KayitdoctorDepartment = document.getElementById('doctorDepartment');
            const KayitIsDoctor = document.getElementById('IsDoctor');
            const KayitdoctorTitle = document.getElementById('doctorTitle');
            const KayitSifre1 = document.getElementById('KayitSifre1');
            const KayitSifre2 = document.getElementById('KayitSifre2');
            const DistanceSalesContract = document.getElementById('cbDistanceSalesContract');

            checkkayit = true;
            if (document.getElementById("doctorActive").dataset.id==1) {

                if (KayitdoctorUniversity.value == -1) {
                    setErrorFor(KayitdoctorUniversity, 'Bu Alan Boş Bırakılamaz');
                } else {
                    setSuccessFor(KayitdoctorUniversity);
                }
                if (KayitdoctorDepartment.value == -1) {
                    setErrorFor(KayitdoctorDepartment, 'Bu Alan Boş Bırakılamaz');
                } else {
                    setSuccessFor(KayitdoctorDepartment);
                }
                if (KayitdoctorTitle.value == -1) {
                    setErrorFor(KayitdoctorTitle, 'Bu Alan Boş Bırakılamaz');
                } else {
                    setSuccessFor(KayitdoctorTitle);
                }

                if (KayitIsDoctor.value == 0) {
                    setErrorFor(KayitIsDoctor, 'Bu Alan Boş Bırakılamaz');
                } else {
                    setSuccessFor(KayitIsDoctor);
                }
            }
            if (KayitAd.value === '') {
                setErrorFor(KayitAd, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitAd);
            }
            if (KayitSoyad.value === '') {
                setErrorFor(KayitSoyad, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitSoyad);
            }
            if (KayitEmail.value === '') {
                setErrorFor(KayitEmail, 'Bu Alan Boş Bırakılamaz');
            } else if (!isEmail(KayitEmail.value)) {
                setErrorFor(KayitEmail, 'Lütfen Geçerli Bir E-posta Adresi Girin');
            } else {
                setSuccessFor(KayitEmail);
            }
            if (KayitTelefon.value.indexOf("_") > -1) {
                setErrorFor(KayitTelefon, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitTelefon);
            }
            var selectedDate = new Date(KayitDTarih.value);
            var now = new Date();
            if (KayitDTarih.value === '') {
                setErrorFor(KayitDTarih, 'Bu Alan Alanı Boş Bırakılamaz');
            } else if (selectedDate > now) {
                setErrorFor(KayitDTarih, 'Lütfen Geçerli Bir Tarih Girin');

            } else {
                setSuccessFor(KayitDTarih);
            }
            if (KayitCinsiyet.value === '') {
                setErrorFor(KayitCinsiyet, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitCinsiyet);
            }
            if (KayitCountry.value == -1) {
                setErrorFor(KayitCountry, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitCountry);
            }
            if (KayitCity.value == -1) {
                setErrorFor(KayitCity, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitCity);
            }
            if (KayitCounty.value == -1) {
                setErrorFor(KayitCounty, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitCounty);
            }
            if (KayitMahalle.value === '') {
                setErrorFor(KayitMahalle, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitMahalle);
            }
            if (KayitSifre1.value === '') {
                setErrorFor(KayitSifre1, 'Bu Alan Boş Bırakılamaz');
            } else {
                setSuccessFor(KayitSifre1);
            }
            if (KayitSifre2.value === '') {
                setErrorFor(KayitSifre2, 'Bu Alan Boş Bırakılamaz');
            } else if (KayitSifre2.value !== KayitSifre1.value) {
                setErrorFor(KayitSifre2, 'Şifreler Eşleşmiyor');
            } else {
                setSuccessFor(KayitSifre2);
            }



            if (checkkayit == true) {
                console.log("sd");
                sozlesmekabul();
            }
        }
        function setErrorFor(input, message) {
            var formControl = input.parentElement;
            var small = formControl.querySelector('small');
            if (small == null) {
                formControl = input.parentElement.parentElement;
                small = formControl.querySelector('small');
            }
            formControl.classList.add("error");
            small.innerText = message;
            checkkayit = false;
            check = false;
        }
        function setSuccessFor(input) {
            const formControl = input.parentElement;
            formControl.classList.remove("error");

        }
        function isEmail(email) {
            return /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email);
        }
    </script>
</body>
</html>